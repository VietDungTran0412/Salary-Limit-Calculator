@using DevTest.Models.enums
@using DevTest.Extensions
@model DevTest.Models.LimitResultModel
@{
    var employmentTypes = Enum.GetValues(typeof(EmploymentType));
    var limit = ViewBag.Limit;
    ViewData["Title"] = "Corporate";
}
<div class="container d-flex flex-column justify-content-center align-items-center vh-100">
    <form method="post" asp-controller="Corporate" asp-action="Index" class="w-100">
        <div class="row justify-content-center mb-4">
            <div class="col-md-6">
                <div class="card shadow border-0">
                    <div class="card-body p-4">
                        <h5 class="card-title text-center fw-bold mb-4">Limit Calculation for Corporate employee</h5>
                        <!-- Employment Type -->
                        <div class="form-group mb-4">
                            <label for="employmentType" class="form-label fw-bold">Select Employment Type:</label>
                            <select name="EmploymentType" id="employmentType" class="form-control form-select shadow-sm p-3">
                                <option value="" disabled selected>Choose an employment type</option>
                                @foreach (EmploymentType employmentType in employmentTypes)
                                {
                                    <option value="@employmentType">@employmentType.GetDescription()</option>
                                }
                            </select>
                        </div>
                        
                        <!-- Salary Field -->
                        <div class="form-group mb-4">
                            <label for="salary" class="form-label fw-bold">Enter Your Annual Salary:</label>
                            <input id="salary" name="Salary" class="form-control shadow-sm p-3" placeholder="Enter a number" required/>
                        </div>
                        <!-- Weekly Hours Field -->
                        <div class="form-group mb-4">
                            <label for="working-hours" class="form-label fw-bold">Enter Your Weekly Working Hours (for part-time only):</label>
                            <input id="working-hours" name="WeeklyWorkingHours" class="form-control shadow-sm p-3" placeholder="Enter a number" required />
                        </div>                        
                        <!-- Button to submit-->
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg shadow-sm w-100">Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    @if (Model != null)
    {
        <div class="container d-flex flex-column justify-content-center align-items-center w-75">
            <div class="row justify-content-center mb-4 w-75">
                <div class="col-md-6 w-75">
                    <div class="card shadow border-0">
                        <div class="card-body p-4">
                            <h5 class="card-title text-center fw-bold mb-4">Limit Result</h5>
                        
                            <!-- Display Limit Value -->
                            <div class="alert alert-info text-center" role="alert">
                                <strong>Calculated Limit:</strong> @Model.Limit
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <script>
        // Disable the other entry if employee type is Casual
        document.addEventListener("DOMContentLoaded", function () {
            const employmentTypeField = document.getElementById("employmentType");
            const salaryField = document.getElementById("salary");
            const weeklyWorkingHours = document.getElementById("working-hours");
            employmentTypeField.addEventListener("change", function () {
                // Disable salary field and working hours field if casual
                if (this.value === "@EmploymentType.CASUAL.ToString()") {
                    salaryField.setAttribute("disabled", "true");
                    salaryField.removeAttribute("required");
                    weeklyWorkingHours.setAttribute("disabled","true")
                } else if (this.value === "@EmploymentType.PARTTIME.ToString()") {
                    salaryField.removeAttribute("disabled");
                    salaryField.setAttribute("required","true");
                    weeklyWorkingHours.removeAttribute("disabled");
                    weeklyWorkingHours.setAttribute("required","true")
                } else {
                    weeklyWorkingHours.removeAttribute("required");
                    weeklyWorkingHours.setAttribute("disabled","true")
                }
            });
        });
    </script>

</div>
